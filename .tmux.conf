# make it Shut up!
set -g bell-action none
# set shell
set-option -g default-shell $SHELL
# tmux terminal italic font
#set-option -g default-terminal "tmux-256color-italic"
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",*256col*:Tc"
# vi behavior
setw -g mode-keys vi
# Fix terminal name issues
set -s escape-time 1
# Turn on window titles
set -g set-titles on
# Set window title string
set -g set-titles-string '#F#P #{pane_current_command}'
# Automatically set window title
setw -g automatic-rename on
# new bind prefix
unbind [
unbind C-b
set -g prefix C-b
# bind navigation
unbind C-n
unbind l
unbind C-p
bind-key C-o command-prompt "new-session -s %1 ssh -A %1 \; set-option default-command \"ssh -A %1\""
bind-key -r C-l resize-pane -R 5
bind-key -r C-k resize-pane -U 5
bind-key -r C-j resize-pane -D 5
bind-key -r C-h resize-pane -L 5
bind-key -r C-n next-window \; set status on
bind-key -r C-p previous-window \; set status on
# set binding for vim user
#is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
#bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
#bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
#bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
#bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
#bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

#bind -n C-h "select-pane -L"
#bind -n C-j "select-pane -D"
#bind -n C-k "select-pane -U"
#bind -n C-l "select-pane -R"
#bind -n C-\  "select-pane -l"
# bind clock
# bind -n F12 clock-mode \; set status off
# bind status bar
bind -n F11 set-option status
# bind reload resource
bind R source-file ~/.tmux.conf \; display-message "Config reloaded..."
# bind vi-like 'normal' mode
bind Escape copy-mode
# bind vi-like visual mode
unbind v
#bind -t vi-copy v begin-selection
bind -Tcopy-mode-vi 'v' send -X begin-selection
# bind vi-like copy/paste through 'normal' mode
# Note: {{{
#   It is encouraged to use xsel instead of xclip, because xclip does not close STDOUT
#   after it has read from tmux's buffer. As such, tmux doesn't know that the copy task has
#   completed, and continues to wait for xclip's termination, thereby rendering tmux
#   unresponsive.
# }}}
unbind y
unbind p
# bind -t vi-copy y copy-pipe "xsel -i -p -b" # old tmux version
# bind -Tcopy-mode-vi 'y' send -X copy-pipe-and-cancel "xsel -b -i"
# bind p run "xsel -b -o | tmux load-buffer - ; tmux paste-buffer"
bind -Tcopy-mode-vi 'y' send -X copy-pipe-and-cancel "pbcopy"
bind p run "pbpaste | tmux load-buffer - ; tmux paste-buffer"
bind-key -Tcopy-mode-vi Escape send -X cancel
bind-key -Tcopy-mode-vi ^v send -X rectangle-toggle
# mouse stuff
set -g mouse on
# disable "release mouse drag to copy and exit copy-mode", ref: https://github.com/tmux/tmux/issues/140
unbind-key -T copy-mode-vi MouseDragEnd1Pane
# since MouseDragEnd1Pane neither exit copy-mode nor clear selection now,
# let single click do selection clearing for us.
bind-key -T copy-mode-vi MouseDown1Pane select-pane\; send-keys -X clear-selection
# this line changes the default binding of MouseDrag1Pane, the only difference
# is that we use `copy-mode -eM` instead of `copy-mode -M`, so that WheelDownPane
# can trigger copy-mode to exit when copy-mode is entered by MouseDrag1Pane
bind -n MouseDrag1Pane if -Ft= '#{mouse_any_flag}' 'if -Ft= \"#{pane_in_mode}\" \"copy-mode -eM\" \"send-keys -M\"' 'copy-mode -eM'
# bind panes splitting
unbind %
bind l split-window -h
unbind '"'
bind j split-window -v
# bind Kill
bind q kill-window
bind Q kill-session
# bind neww
bind C-c neww \; set status on
bind c neww \; set status on
# set colour clock
set-window-option -g clock-mode-colour brightwhite
# for vim
set -g focus-events on

# List of plugins
#set -g @plugin 'tmux-plugins/tpm'
#set -g @plugin 'tmux-plugins/tmux-sensible'
#set -g @plugin 'tmux-plugins/tmux-resurrect'
#set -g @plugin 'tmux-plugins/tmux-continuum'
#
#run '~/.config/tmux/plugins/tpm/tpm'
#
## plugins options
#set -g @resurrect-strategy-vim 'session'
#set -g @resurrect-capture-pane-contents 'on'
#set -g @resurrect-processes 'irb pry ri "~bundle exec ri" "~bundle exec pry"'
#set -g @continuum-restore 'on'

set -wg mode-style bg=brightwhite,fg=black

sep_st='#[fg=black,bg=brightblue]'
sep_c='#[fg=brightwhite] '

sep_d='#[fg=black,bold]'
sep_e='#[default,fg=white] #[bg=white]#[fg=black]'
sep_f='#[fg=brightwhite] '

sep_g='#[fg=blue,bold]'
sep_h='#[default,fg=black] #[fg=blue,bg=black,bold]'
sep_i='#[fg=brightwhite] '

sep_b='#[fg=brightyellow] #[default, bg=brightyellow, fg=black]'
sep_a='#[fg=yellow] #[bg=yellow, fg=black]'

sep_off="#[fg=brightred] #[bg=brightred, fg=brightwhite, bold] OFF"
sep_on="#[fg=green] #[bg=green, fg=brightwhite, bold]  ON"

# set status bar
set-window-option -g window-status-separator ''
set -g status-position bottom
set -g status-left-length 42
set -g status-justify left # center align window list
setw -g status-style bg=brightwhite

set -g status-left '#{sep_st} Î» #S #{sep_c}'
setw -g window-status-format '#{sep_d} #I #{sep_e} #W #{sep_f}'
setw -g window-status-current-format '#{sep_g} #I #{sep_h} #W #{sep_i}'
set -g status-right '#{sep_b} %a %d/%m/%Y #{sep_a} %H:%M #{sep_on} '

# set Panel borders
set -g pane-active-border-style fg=white,bg=default
set -g pane-border-style fg=black,bg=default

# set Message text
set-option -g message-style bg=default,fg=red
set-option -g message-command-style bg=default,fg=brightblack

# status off at start
# set -g status off

bind -T root F12  \
    set prefix None \;\
    set key-table off \;\
    set focus-events off \;\
    set status-right '#{sep_b} %a %d/%m/%Y #{sep_a} %H:%M #{sep_off} ' \;\
    set-option status \;\
    refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u focus-events \;\
  set -u status-right \;\
  set-option status \;\
  refresh-client -S


bind : set -g mouse off
bind ! set -g mouse on 
